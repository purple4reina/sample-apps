service: sns-sqs-trace-propagation

provider:
  name: aws
  region: sa-east-1
  timeout: 30
  environment:
    DD_API_KEY: ${env:DD_API_KEY}
    DD_CAPTURE_LAMBDA_PAYLOAD: true
    DD_COLD_START_TRACE: false
    DD_ENV: dev
    DD_LOG_LEVEL: debug
    DD_SERVICE: sns-sqs-trace-propagation
    DD_SITE: datadoghq.com
    DD_TRACE_ENABLED: true
    DD_TRACE_PROPAGATION_STYLE: tracecontext
    SNS_TOPIC_ARNS: !Join [",", "${self:custom.topicArns}"]
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "sns:*"
      Resource:
        - !Ref pythonSns
        - !Ref javaSns

custom:
  topicArns:
    - !Ref pythonSns
    - !Ref javaSns
  producerUrls:
    - !GetAtt PythonDashproducerLambdaFunctionUrl.FunctionUrl
    - !GetAtt JavaDashproducerLambdaFunctionUrl.FunctionUrl
  layers:
    extension: arn:aws:lambda:sa-east-1:464622532012:layer:Datadog-Extension:56
    node: arn:aws:lambda:sa-east-1:464622532012:layer:Datadog-Node18-x:108
    python: arn:aws:lambda:sa-east-1:464622532012:layer:Datadog-Python39:92
    java: arn:aws:lambda:sa-east-1:464622532012:layer:dd-trace-java:14

resources:
  Resources:
    # python
    pythonSqs:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: pythonSqs
    pythonSns:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: pythonSns
        Subscription:
          - Protocol: sqs
            Endpoint: !GetAtt pythonSqs.Arn
    pythonPolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - Ref: pythonSqs
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: "Allow SNS publish to SQS"
              Effect: Allow
              Principal:
                Service: "sns.amazonaws.com"
              Resource: !GetAtt pythonSqs.Arn
              Action: SQS:SendMessage
              Condition:
                ArnEquals:
                  aws:SourceArn: !Ref pythonSns
    # java
    javaSqs:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: javaSqs
    javaSns:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: javaSns
        Subscription:
          - Protocol: sqs
            Endpoint: !GetAtt javaSqs.Arn
    javaPolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - Ref: javaSqs
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: "Allow SNS publish to SQS"
              Effect: Allow
              Principal:
                Service: "sns.amazonaws.com"
              Resource: !GetAtt javaSqs.Arn
              Action: SQS:SendMessage
              Condition:
                ArnEquals:
                  aws:SourceArn: !Ref javaSns

functions:
  # orchestrator
  orchestrator:
    handler: orchestrator/handlers.orchestrate
    runtime: python3.9
    url: true
    environment:
      PRODUCER_URLS: !Join [",", "${self:custom.producerUrls}"]
    layers:
      - ${self:custom.layers.extension}
      - ${self:custom.layers.python}

  # python
  python-producer:
    handler: datadog_lambda.handler.handler
    runtime: python3.9
    url: true
    layers:
      - ${self:custom.layers.extension}
      - ${self:custom.layers.python}
    environment:
      DD_LAMBDA_HANDLER: python/handlers.producer
  python-consumer:
    handler: datadog_lambda.handler.handler
    runtime: python3.9
    layers:
      - ${self:custom.layers.extension}
      - ${self:custom.layers.python}
    environment:
      DD_LAMBDA_HANDLER: python/handlers.consumer
    events:
      - sqs:
          arn: !GetAtt pythonSqs.Arn

  # java
  java-producer:
    handler: example.Producer
    runtime: java11
    url: true
    package:
      artifact: java/build/distributions/java.zip
    environment:
      AWS_LAMBDA_EXEC_WRAPPER: /opt/datadog_wrapper
    layers:
      - ${self:custom.layers.extension}
      - ${self:custom.layers.java}
  java-consumer:
    handler: example.Consumer
    runtime: java11
    package:
      artifact: java/build/distributions/java.zip
    layers:
      - ${self:custom.layers.extension}
      - ${self:custom.layers.java}
    environment:
      AWS_LAMBDA_EXEC_WRAPPER: /opt/datadog_wrapper
    events:
      - sqs:
          arn: !GetAtt javaSqs.Arn
