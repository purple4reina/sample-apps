service: sqs-trace-propagation

provider:
  name: aws
  region: sa-east-1
  timeout: 30
  environment:
    DD_API_KEY: ${env:DD_API_KEY}
    DD_CAPTURE_LAMBDA_PAYLOAD: true
    DD_COLD_START_TRACE: false
    DD_ENV: dev
    DD_LOG_LEVEL: debug
    DD_SERVICE: sqs-trace-propagation
    DD_SITE: datadoghq.com
    DD_TRACE_ENABLED: true
    DD_TRACE_PROPAGATION_STYLE: tracecontext
    SQS_QUEUE_URLS: !Join [",", "${self:custom.queueUrls}"]

plugins:
  - serverless-lift

custom:
  queueUrls:
    - ${construct:python-sqs.queueUrl}
    - ${construct:java-sqs.queueUrl}
    - ${construct:go-sqs.queueUrl}
    - ${construct:node-sqs.queueUrl}
  producerUrls:
    - !GetAtt PythonDashproducerLambdaFunctionUrl.FunctionUrl
    - !GetAtt JavaDashproducerLambdaFunctionUrl.FunctionUrl
    - !GetAtt GoDashproducerLambdaFunctionUrl.FunctionUrl
    - !GetAtt NodeDashproducerLambdaFunctionUrl.FunctionUrl
  layers:
    extension: arn:aws:lambda:sa-east-1:464622532012:layer:Datadog-Extension:64
    node: arn:aws:lambda:sa-east-1:464622532012:layer:Datadog-Node18-x:115
    python: arn:aws:lambda:sa-east-1:464622532012:layer:Datadog-Python39:98
    java: arn:aws:lambda:sa-east-1:464622532012:layer:dd-trace-java:15

constructs:
  python-sqs:
    type: queue
    worker:
      handler: datadog_lambda.handler.handler
      runtime: python3.9
      name: ${self:service}-${sls:stage}-python-consumer
      layers:
        - ${self:custom.layers.extension}
        - ${self:custom.layers.python}
      environment:
        DD_LAMBDA_HANDLER: python/handlers.consumer
  java-sqs:
    type: queue
    worker:
      handler: example.Consumer
      runtime: java11
      name: ${self:service}-${sls:stage}-java-consumer
      package:
        artifact: java/build/distributions/java.zip
      layers:
        - ${self:custom.layers.extension}
        - ${self:custom.layers.java}
      environment:
        AWS_LAMBDA_EXEC_WRAPPER: /opt/datadog_wrapper
  go-sqs:
    type: queue
    worker:
      handler: golang/bin/consumer
      runtime: provided.al2
      name: ${self:service}-${sls:stage}-go-consumer
      environment:
        DD_UNIVERSAL_INSTRUMENTATION: true
      layers:
        - ${self:custom.layers.extension}
  node-sqs:
    type: queue
    worker:
      handler: /opt/nodejs/node_modules/datadog-lambda-js/handler.handler
      runtime: nodejs18.x
      name: ${self:service}-${sls:stage}-node-consumer
      layers:
        - ${self:custom.layers.extension}
        - ${self:custom.layers.node}
      environment:
        DD_LAMBDA_HANDLER: node/handlers.consumer

functions:
  python-producer:
    handler: datadog_lambda.handler.handler
    runtime: python3.9
    url: true
    layers:
      - ${self:custom.layers.extension}
      - ${self:custom.layers.python}
    environment:
      DD_LAMBDA_HANDLER: python/handlers.producer
  java-producer:
    handler: example.Producer
    runtime: java11
    url: true
    package:
      artifact: java/build/distributions/java.zip
    layers:
      - ${self:custom.layers.extension}
      - ${self:custom.layers.java}
    environment:
      AWS_LAMBDA_EXEC_WRAPPER: /opt/datadog_wrapper
  go-producer:
    handler: golang/bin/producer
    runtime: provided.al2
    url: true
    environment:
      DD_UNIVERSAL_INSTRUMENTATION: true
    layers:
      - ${self:custom.layers.extension}
  node-producer:
    handler: /opt/nodejs/node_modules/datadog-lambda-js/handler.handler
    runtime: nodejs18.x
    url: true
    layers:
      - ${self:custom.layers.extension}
      - ${self:custom.layers.node}
    environment:
      DD_LAMBDA_HANDLER: node/handlers.producer
  orchestrator:
    handler: datadog_lambda.handler.handler
    runtime: python3.9
    url: true
    environment:
      PRODUCER_URLS: !Join [",", "${self:custom.producerUrls}"]
      DD_LAMBDA_HANDLER: orchestrator/handlers.orchestrate
    layers:
      - ${self:custom.layers.extension}
      - ${self:custom.layers.python}
